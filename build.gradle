apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

mainClassName = 'com.company.transfers.Application'

ext {
    slf4jVersion = '1.7.26'
    jerseyVersion = '2.28'
    jettyVersion = '9.4.15.v20190215'
    jdbiVersion = '3.6.0'
    h2Version = '1.4.198'
    modelMapperVersion = '2.3.2'
    lombokVersion = '1.18.6'
    karateVersion = '0.9.1'
    hamcrestVersion = '2.1'
}

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}

repositories {
    jcenter()
}

/*****************************************************************************
 * Dependencies
 *****************************************************************************/
dependencies {

    /** SLF4j **/
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    compile "org.slf4j:slf4j-simple:${slf4jVersion}"

    /** Jetty **/
    compile "org.eclipse.jetty:jetty-server:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"

    /** Jersey **/
    compile "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-http:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    compile "org.glassfish.jersey.ext:jersey-bean-validation:${jerseyVersion}"
    compile "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}"

    /** Jdbi **/
    compile "org.jdbi:jdbi3-core:${jdbiVersion}"
    compile "org.jdbi:jdbi3-sqlobject:${jdbiVersion}"

    /** H2 Database **/
    compile "com.h2database:h2:${h2Version}"

    /** ModelMapper **/
    compile "org.modelmapper:modelmapper:${modelMapperVersion}"

    /** Lombok **/
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    /** Karate **/
    testCompile "com.intuit.karate:karate-junit4:${karateVersion}"
    testCompile "com.intuit.karate:karate-apache:${karateVersion}"

    /** Hamcrest **/
    testCompile "org.hamcrest:hamcrest:${hamcrestVersion}"
}

sourceSets {
    test {
        resources {
            srcDir file('src/test/java')
            exclude '**/*.java'
        }
    }
}

shadowJar {
    archiveName = 'transfers.jar'
    mergeServiceFiles()
}